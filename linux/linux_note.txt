linux下查看某命令的具体位置使用which，如：
which ab



在Linux/unix 平台上的sqlplus中，如果输错了字符，要想删除，习惯性的按下backspace键后，发现非但没有删除想要删掉的字符，还多出了两个字符^H。当 然，我们可以同时按下ctrl+backspace键来删除，但对于习惯了用backspace来删除的用户，这样很不爽。这可以通过修改tty终端的设 置来实现backspace删除功能。通过使用stty命令，就可以查看或者修改终端的按键设置。
　　例如，设置backspace为删除键：
　　[oracle10g@linux]$ stty erase ^h
　　如果要改回使用ctrl+backspace为删除键
　　[oracle10g@linux]$ stty erase ^?
　　如果需要重启后自动设置终端，可以将上述命令加入到profile中。
　　可以通过stty -a命令来查看所有的终端设置。下面是在linux下执行的输出：
　　[oracle10g@linux]$ stty -a

cat /etc/os-release
 
 debian linux 中如何查看软件包是否已经安装和如何安装、卸载软件
 
$ dpkg -l zsh 

No packages found matching zsh. 

上面结果这表明 zsh 没有 安装。


关于Linux中的so文件
	so文件就是通常说的动态链接库，就跟windows下的dll文件差不多。
	ko是内核模块文件，驱动之类的啥的。
	不过在linux系统下文件的后缀多数情况下只是个标识，有可能代表不了文件的真实属性的。
至于怎么编写，就跟用VS编译dll或者lib文件差不多，把你的代码编译完成以后命名为相应的后缀就好了。
我了解的一般都是C程序，java属于脚本语言，程序多数情况下是被解释执行的，所以一般不需要编译成库。
至于如何编译成库文件，如果你在windows下做过开发的话应该不用我解释太多。实在不知道的话可以再问我哈~~


linux下采用LD_PRELOAD机制动态修改方法和注入代码
LD_PRELOAD是Linux下的一个环境变量，动态链接器在载入一个程序所需的所有动态库之前，
首先会载入LD_PRELOAD环境变量所指定的动态库。运用这个机制，我们可以修改/替换已有动态库中的方法，
加入我们自己的逻辑，从而改变程序的执行行为。不过该方法只对动态链接的程序有效，对静态链接的程序无效。




